| 구분       | 기술                             | 역할                   |
| -------- | ------------------------------ | -------------------- |
| Frontend | React, TypeScript, TailwindCSS | UI 구성, 상태 관리, API 연동 |
| Backend  | Node.js, Express               | REST API 서버 구축       |
| Database | MongoDB (or MySQL)             | 데이터 저장 및 조회          |
| Tools    | Git, Postman, VSCode           | 협업 및 테스트 도구          |
| Deploy   | Vercel (FE) / Render (BE)      | 배포 및 서비스 운영 환경       |


| 기능     | 설명               | 요청 방식                      | 비고         |
| ------ | ---------------- | -------------------------- | ---------- |
| 회원가입   | 이름, 이메일, 비밀번호 등록 | `POST /api/users/register` | bcrypt 암호화 |
| 로그인    | 이메일 + 비밀번호 인증    | `POST /api/users/login`    | JWT 발급     |
| 사용자 조회 | 사용자 정보 확인        | `GET /api/users/:id`       | 토큰 검증 필요   |

| 기능        | 설명          | 요청 방식                   | 비고           |
| --------- | ----------- | ----------------------- | ------------ |
| 게시글 목록 조회 | 전체 게시글 불러오기 | `GET /api/posts`        | 페이지네이션 적용 가능 |
| 게시글 작성    | 제목 + 내용 등록  | `POST /api/posts`       | 로그인 사용자만 가능  |
| 게시글 수정    | 내용 업데이트     | `PUT /api/posts/:id`    | 작성자만 가능      |
| 게시글 삭제    | 게시글 제거      | `DELETE /api/posts/:id` | 작성자만 가능      |

| 페이지    | 주요 내용           | 경로          |
| ------ | --------------- | ----------- |
| 홈 화면   | 게시글 목록 표시       | `/`         |
| 로그인    | 로그인 폼 + 인증 처리   | `/login`    |
| 회원가입   | 폼 입력 + API 연동   | `/register` |
| 게시글 작성 | 제목, 내용 입력 + 업로드 | `/write`    |
| 상세 보기  | 게시글 상세 및 수정 버튼  | `/post/:id` |

{
  _id: ObjectId,
  name: String,
  email: String,
  password: String (hashed),
  createdAt: Date
}

{
  _id: ObjectId,
  title: String,
  content: String,
  authorId: ObjectId,
  createdAt: Date,
  updatedAt: Date
}
